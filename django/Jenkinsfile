pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: jenkins-kaniko
spec:
  serviceAccountName: jenkins-sa
  containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.16.0-debug
      imagePullPolicy: Always
      command:
        - sleep
      args:
        - 99d
    - name: git
      image: alpine/git
      command:
        - sleep
      args:
        - 99d
"""
    }
  }

  environment {
    ECR_REGISTRY = "033491664040.dkr.ecr.eu-central-1.amazonaws.com"
    IMAGE_NAME   = "vp-dja"
    IMAGE_TAG    = "v1.0.${BUILD_NUMBER}"
    COMMIT_NAME  = "Jenkins CI"
    COMMIT_EMAIL = "jenkins@django-app.svc"
  }

  stages {
    stage('Build & Push Docker Image') {
      steps {
        container('kaniko') {
          sh '''
            cd django
            /kaniko/executor \\
              --context `pwd` \\
              --dockerfile `pwd`/Dockerfile \\
              --destination=$ECR_REGISTRY/$IMAGE_NAME:latest \\
              --destination=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \\
              --cache=false \\
              --insecure \\
              --skip-tls-verify
          '''
        }
      }
    }

    stage('Update Chart Tag in Git') {
      steps {
        container('git') {
          withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PAT')]) {
            sh '''
              git config --global --add safe.directory `pwd`
              git clone https://$GIT_USERNAME:$GIT_PAT@github.com/AegisVP/devops-fp.git -b cd

              cd devops-fp
              git config user.name "$COMMIT_NAME"
              git config user.email "$COMMIT_EMAIL"

              cd charts/django-app

              sed -i "s/tag: .*/tag: $IMAGE_TAG/" values.yaml

              git add values.yaml
              git commit -m "Update image tag to $IMAGE_TAG"
              git push
            '''
          }
        }
      }
    }
  }
}
